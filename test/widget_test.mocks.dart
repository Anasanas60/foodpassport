// Mocks generated by Mockito 5.4.6 from annotations
// in foodpassport/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:camera_platform_interface/src/types/camera_description.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [CameraDescription].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCameraDescription extends _i1.Mock implements _i2.CameraDescription {
  MockCameraDescription() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i3.dummyValue<String>(this, Invocation.getter(#name)),
          )
          as String);

  @override
  _i2.CameraLensDirection get lensDirection =>
      (super.noSuchMethod(
            Invocation.getter(#lensDirection),
            returnValue: _i2.CameraLensDirection.front,
          )
          as _i2.CameraLensDirection);

  @override
  int get sensorOrientation =>
      (super.noSuchMethod(Invocation.getter(#sensorOrientation), returnValue: 0)
          as int);

  @override
  _i2.CameraLensType get lensType =>
      (super.noSuchMethod(
            Invocation.getter(#lensType),
            returnValue: _i2.CameraLensType.wide,
          )
          as _i2.CameraLensType);
}
